'use strict';

// logger
const SimpleNodeLogger = require('simple-node-logger'),
    opts = {
        logFilePath:'mylogfile.log',
        timestampFormat:'YYYY-MM-DD HH:mm:ss.SSS'
    },
logger = SimpleNodeLogger.createSimpleLogger( opts );
logger.info('-------------------');
logger.info('–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω!');
// /logger

const nodemailer = require('nodemailer');
const http = require('http');
//const https = require('https'); // –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É https

const targetLink = 'http://nekrasovka.ru/afisha/19-01-2019/1224';

const timePeriod = 1000 * 60 * 10; // –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
let index;
function setMonitor () {
    // –¢—É—Ç –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
    http.get(targetLink, (res) => {
        // –¢–∞–∫ –∫–∞–∫ —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç –ø–æ—Ä—Ü–∏—è–º–∏,
        // –∫–ª–∞–¥–µ–º –≤—Å–µ –≤ –º–∞—Å—Å–∏–≤ –∏ –∑–∞—Ç–µ–º —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –æ—Ç–≤–µ—Ç–∞
        let body = [];
        res.on('data', function (chunk) {
            body.push(chunk);
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ
        res.on('end', () => {
            body = Buffer.concat(body).toString();
            index = body.indexOf('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        });
    })

    // –ï—Å–ª–∏ –≤ —Ç–µ–ª–µ –æ—Ç–≤–µ—Ç–∞ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞ '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
    // –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –µ—â–µ —Ä–∞–∑, –∏–Ω–∞—á–µ –ø–∏—à–µ–º —á—Ç–æ –ø–æ—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!
    if (index !== -1) {
        setTimeout(() => {
            logger.info('–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç...');
            // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–≤—Ç–æ—Ä–Ω–æ
            setMonitor();
        }, timePeriod);
    } else {
        logger.info('–£—Ä–∞! –î–æ—Å—Ç—É–ø–Ω–æ! –°–∫–æ—Ä–µ–µ —Ä–µ–≥–∞–π—Å—è!');
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—É—Ç –ø–∏—Å—å–º–æ.
        sendMail(mailOptions);
    }
}

setMonitor();

// HTML –∫–æ–Ω—Ç–µ–Ω—Ç –ø–∏—Å—å–º–∞
const output = `
<p>–°—Ä–æ—á–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è! ü§ì</p>
<label>–í–æ—Ç —Ç–µ–±–µ —Å—Å—ã–ª–∫–∞</label>
<a href="${targetLink}">${targetLink}</a>
`;

// –û–ø—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã
let mailOptions = {
    from: 'example@yandex.ru', // –ø–æ—á—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    to: 'example@yandex.ru', // –ª–∏—Å—Ç –∞–¥—Ä–µ—Å–æ–≤ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
    subject: '–°—Ä–æ—á–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ', // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∏—Å—å–º–∞
    text: '–°—Ä–æ—á–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è! üò®', // –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞ –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–ª–∞ –ø–∏—Å—å–º–∞ –≤ html
    html: output // html —Ç–µ–ª–æ –ø–∏—Å—å–º–∞
};

// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ
function sendMail(mailOptions) {
    // –°–æ–∑–¥–∞–µ–º –æ–±—å–µ–∫—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞
    // –ê–≤—Ç–æ—Ä–∏–∑–∏—Ä—É–µ–º—Å—è
    let smtpTransport;
    try {
        smtpTransport = nodemailer.createTransport({
                host: 'smtp.yandex.ru',
                port: 465,
                secure: true, // true –¥–ª—è 465, false –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ—Ä—Ç–æ–≤ 587
                auth: {
                user: "example@yandex.ru", // –ø–æ—á—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                pass: "secretPassword" // –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            }
        });
    } catch (e) {
        return logger.error('–û—à–∏–±–∫–∞: ' + e.name + ":" + e.message);
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
    smtpTransport.sendMail(mailOptions, (error, info) => {
        if (error) {
          return logger.error('–û—à–∏–±–∫–∞');
        } else {
            logger.info('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: %s', info.messageId);
        }
    });
}
